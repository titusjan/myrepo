# Based on the Python starter workflow
# https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#using-the-python-starter-workflow

name: MyRepo

on: [push, pull_request]

defaults:
  run:
    shell: bash

jobs:
  dump-contexts-to-log:
    runs-on: windows-latest
    steps:
      - name: Dump GitHub context
        id: github_context_step
        run: echo '${{ toJSON(github) }}'
      - name: Dump job context
        run: echo '${{ toJSON(job) }}'
      - name: Dump steps context
        run: echo '${{ toJSON(steps) }}'
      - name: Dump runner context
        run: echo '${{ toJSON(runner) }}'
      - name: Dump strategy context
        run: echo '${{ toJSON(strategy) }}'
      - name: Dump matrix context
        run: echo '${{ toJSON(matrix) }}'
      - name: Dump env context
        run: echo '${{ toJSON(env) }}'

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest" , "windows-latest"]
        python-version: ["3.10"]

    steps:
      - name: Print current directory
        run: echo "Current dir ${PWD}"

      - name: Dump GitHub context
        id: github_context_step
        run: echo '${{ toJSON(github) }}'
      - name: Dump job context
        run: echo '${{ toJSON(job) }}'
      - name: Dump steps context
        run: echo '${{ toJSON(steps) }}'
      - name: Dump runner context
        run: echo '${{ toJSON(runner) }}'
      - name: Dump strategy context
        run: echo '${{ toJSON(strategy) }}'
      - name: Dump matrix context
        run: echo '${{ toJSON(matrix) }}'
      - name: Dump env context
        run: echo '${{ toJSON(env) }}'

      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Print current directory
        run: echo "Current dir ${PWD}"

      - name: List files in the current directory
        run: ls -l

      - name: Checkout test data
        uses: actions/checkout@v2
        with:
          repository: titusjan/argos-test-data
          path: argos-test-data

      - name: List files in the current directory
        run: ls -l

      - name: List files in the argos test data directory
        run: ls -l argos-test-data

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest PyQt5
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Print current directory
        run: echo "Current dir ${PWD}"

      - name: Run ls command
        run: ls -l

      - name: Test with pytest
        run: |
          echo "Current dir ${PWD}"
          pytest tests

      - name: Run the test program
        run: |
          echo "Python version $(python --version)"
          
          # Exit automatically after 3 seconds
          python myrepo/main.py 3
